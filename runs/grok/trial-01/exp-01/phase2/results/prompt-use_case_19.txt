You are a legal knowledge extractor specialized in TOSL and ODRL policy modeling.

        TASKS:
        - Read the clause.
        - Produce a SINGLE minimal ODRL/TOSL policy in Turtle.

        Guidelines:
        - Output MUST be valid Turtle inside a single fenced code block: ```ttl … ```
        - Use only the vocabulary and structure provided in the ontology context and reference template in markdown.
        - Use ONLY the classes, properties, prefixes, and shapes that appear in: 1) Ontology context below, and 2) Reference template below.
        - All URIs and prefixes must be exactly as shown.
        - Do not add explanations, headers, or any commentary.

        Ontology context: 
        @prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix schema: <http://schema.org/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix vcard: <http://www.w3.org/2006/vcard/ns#> .
@prefix cc: <http://creativecommons.org/ns#> .
@prefix odrl: <http://www.w3.org/ns/odrl/2/> .
@prefix tosl: <https://w3id.org/tosl/> .

#################################################################
#    Object Properties
#################################################################

tosl:onDispute a owl:ObjectProperty, skos:Concept ;
        rdfs:domain odrl:Policy ;
        rdfs:range tosl:DisputeResolution .

tosl:condition a owl:ObjectProperty, skos:Concept ;
        rdfs:domain tosl:DisputeResolution ;
        rdfs:range [ rdf:type owl:Class ;
                        owl:unionOf ( odrl:Constraint
                                    odrl:LogicalConstraint
                                    )
                    ] .

tosl:governedBy a owl:ObjectProperty, skos:Concept ;
        rdfs:domain tosl:DisputeResolution ;
        rdfs:range tosl:Law .

tosl:liability a owl:ObjectProperty, skos:Concept ;
        rdfs:domain odrl:Policy , odrl:Asset, odrl:Rule ;
        rdfs:range tosl:Liability .

tosl:liableParty a owl:ObjectProperty, skos:Concept ;
        rdfs:domain tosl:Liability ;
        rdfs:range odrl:Party .

tosl:targetParty a owl:ObjectProperty, skos:Concept ;
    rdfs:domain tosl:Liability, tosl:DisputeResolution ;
    rdfs:range odrl:Party .

tosl:limitation a owl:ObjectProperty, skos:Concept ;
        rdfs:domain tosl:Liability ;
        rdfs:range [ rdf:type owl:Class ;
                    owl:unionOf ( odrl:Constraint
                                odrl:LogicalConstraint
                                )
                ] .

tosl:limitationOfLiability a owl:ObjectProperty, skos:Concept ;
        rdfs:domain odrl:Policy , odrl:Asset, odrl:Rule ;
        rdfs:range tosl:Liability .

tosl:requires a owl:ObjectProperty, skos:Concept ;
        rdfs:domain tosl:Litigation ;
        rdfs:range tosl:Arbitration .

tosl:takesPlaceIn a owl:ObjectProperty, skos:Concept ;
        rdfs:domain tosl:DisputeResolution ;
        rdfs:range tosl:Jurisdiction .

tosl:trigger a owl:ObjectProperty, skos:Concept ;
        rdfs:domain odrl:Permission ;
        rdfs:range odrl:Duty .


odrl:partOf a rdf:Property , owl:ObjectProperty, skos:Concept ;
	skos:definition "Identifies an Asset/PartyCollection that the Asset/Party is a member of." ;
	rdfs:domain [
		a owl:Class ;
		owl:unionOf ( odrl:Asset odrl:Party ) ;
	] ;
	rdfs:range [
		a owl:Class ;
		owl:unionOf ( odrl:AssetCollection odrl:PartyCollection ) ;
	] .

odrl:permission
	a rdf:Property , owl:ObjectProperty, skos:Concept ;
	rdfs:domain odrl:Policy ;
	rdfs:range odrl:Permission .

odrl:prohibition
	a rdf:Property , owl:ObjectProperty, skos:Concept ;
	rdfs:domain odrl:Policy ;
	rdfs:range odrl:Prohibition.

odrl:output a rdf:Property , owl:ObjectProperty, skos:Concept ;
	rdfs:subPropertyOf odrl:relation ;
	skos:definition "The output property specifies the Asset which is created from the output of the Action." ;
	rdfs:domain odrl:Rule ;
	rdfs:range odrl:Asset .

odrl:target a rdf:Property , owl:ObjectProperty, skos:Concept ;
	rdfs:subPropertyOf odrl:relation ;
	skos:definition "The target property indicates the Asset that is the primary subject to which the Rule action directly applies." ;
	rdfs:domain [
		a owl:Class ;
		owl:unionOf ( odrl:Rule odrl:Policy ) ;
	] ;
	rdfs:range odrl:Asset .

odrl:action a rdf:Property , owl:ObjectProperty, skos:Concept ;
	skos:definition "The operation relating to the Asset for which the Rule is being subjected." ;
	rdfs:domain [
		a owl:Class ;
		owl:unionOf ( odrl:Rule odrl:Policy ) ;
	] ;
	rdfs:range odrl:Action .

odrl:constraint a rdf:Property , owl:ObjectProperty, skos:Concept ;
	skos:note "Constraints on Rules are used to determine if a rule is Active or not. Example: the Permission rule is only active during the year 2018." ;
	rdfs:domain [
		a owl:Class ;
		owl:unionOf ( odrl:Policy odrl:Rule ) ;
	] ;
	rdfs:range [
		a owl:Class ;
		owl:unionOf ( odrl:Constraint odrl:LogicalConstraint ) ;
	] .

odrl:refinement a rdf:Property , owl:ObjectProperty, skos:Concept ;
	skos:definition "Constraint used to refine the semantics of an Action, or Party/Asset Collection" ;
	rdfs:domain [
		a owl:Class ;
		owl:unionOf ( odrl:Action odrl:AssetCollection odrl:PartyCollection ) ;
	] ;
	rdfs:range [
		a owl:Class ;
		owl:unionOf ( odrl:Constraint odrl:LogicalConstraint ) ;
	] .

odrl:duty a rdf:Property , owl:ObjectProperty, skos:Concept ;
	skos:note "A Duty is a pre-condition which must be fulfilled in order to receive the Permission." ;
	rdfs:domain odrl:Permission ;
	rdfs:range odrl:Duty .

odrl:obligation a rdf:Property , owl:ObjectProperty, skos:Concept ;
	skos:note "The Duty is a requirement which must be fulfilled." ;
	rdfs:domain odrl:Policy ;
	rdfs:range odrl:Duty .

odrl:failure a rdf:Property , owl:ObjectProperty, skos:Concept ;
	skos:note "The parent property to sub-properties that express explicit failure contexts." ;
	rdfs:domain odrl:Rule ;
	rdfs:range odrl:Rule .

odrl:consequence a rdf:Property , owl:ObjectProperty, skos:Concept ;
    rdfs:subPropertyOf odrl:failure ;
	skos:note "The consequence property is utilised to express the repercussions of not fulfilling an agreed Policy obligation or duty for a Permission. If either of these fails to be fulfilled, then this will result in the consequence Duty also becoming a new requirement, meaning that the original obligation or duty, as well as the consequence Duty must all be fulfilled" ;
	rdfs:domain odrl:Duty ;
	rdfs:range odrl:Duty .

odrl:remedy a rdf:Property , owl:ObjectProperty, skos:Concept ;
    rdfs:subPropertyOf odrl:failure ;
	skos:note "The remedy property expresses an agreed Duty that must be fulfilled in case that a Prohibition has been violated by being exercised." ;
	rdfs:domain odrl:Prohibition ;
	rdfs:range odrl:Duty .

odrl:unit a rdf:Property ;
	rdfs:domain odrl:Constraint ;
	skos:definition "The unit of measurement of the value of the rightOperand or rightOperandReference of a Constraint." .

odrl:dataType a rdf:Property, skos:Concept ;
	rdfs:domain odrl:Constraint ;
	rdfs:range rdfs:Datatype ;
    skos:note "In RDF encodings, use of the rdf:datatype MUST be used. In JSON-LD encoding, the use of @type MUST be used." .

odrl:operator a rdf:Property , owl:ObjectProperty, skos:Concept ;
	skos:definition "The operator function applied to operands of a Constraint" ;
	rdfs:domain odrl:Constraint ;
	rdfs:range odrl:Operator .

odrl:rightOperand a rdf:Property, owl:DatatypeProperty, skos:Concept ;
    skos:note "When used with set-based operators, a list of values may be used." ;
	rdfs:range [
		a owl:Class ;
		owl:unionOf ( odrl:RightOperand rdfs:Literal xsd:anyURI ) ;
	] ;
	rdfs:domain odrl:Constraint .

odrl:rightOperandReference a rdf:Property, skos:Concept ;
	skos:note "An IRI that MUST be dereferenced to obtain the actual right operand value. When used with set-based operators, a list of IRIs may be used" ;
	rdfs:domain odrl:Constraint .

odrl:leftOperand a rdf:Property, skos:Concept ;
	skos:definition "The left operand in a constraint expression." ;
	rdfs:range odrl:LeftOperand ;
	rdfs:domain odrl:Constraint .

odrl:status
	a rdf:Property, skos:Concept ;
	skos:definition "the value generated from the leftOperand action or a value related to the leftOperand set as the reference for the comparison." ;
	rdfs:domain odrl:Constraint .

odrl:operand a rdf:Property , owl:ObjectProperty, skos:Concept ;
	skos:definition "Operand is an abstract property for a logical relationship." ;
	rdfs:domain odrl:LogicalConstraint .

odrl:function a rdf:Property , owl:ObjectProperty, skos:Concept ;
	skos:definition "Function is an abstract property whose sub-properties define the functional roles which may be fulfilled by a party in relation to a Rule." ;
	rdfs:domain [
		a owl:Class ;
		owl:unionOf ( odrl:Rule odrl:Policy ) ;
	] ;
	rdfs:range odrl:Party .

## Functions

odrl:assignee a rdf:Property , owl:ObjectProperty, skos:Concept ;
	rdfs:subPropertyOf odrl:function ;
	skos:definition "The Party is the recipient of the Rule." .

odrl:assigner a rdf:Property , owl:ObjectProperty, skos:Concept ;
	rdfs:subPropertyOf odrl:function ;
	skos:definition "The Party is the issuer of the Rule." .

odrl:assigneeOf a rdf:Property , owl:ObjectProperty, skos:Concept ;
	skos:definition "Identifies an ODRL Policy for which the identified Party undertakes the assignee functional role." ;
    rdfs:domain odrl:Party ;
	rdfs:range odrl:Policy .

odrl:assignerOf a rdf:Property , owl:ObjectProperty, skos:Concept ;
 	skos:definition "Identifies an ODRL Policy for which the identified Party undertakes the assigner functional role." ;
    rdfs:domain odrl:Party ;
	rdfs:range odrl:Policy .

odrl:attributedParty a rdf:Property , owl:ObjectProperty, skos:Concept ;
 	rdfs:subPropertyOf odrl:function ;
 	skos:definition "The Party to be attributed." .

odrl:attributingParty a rdf:Property , owl:ObjectProperty, skos:Concept ;
 	rdfs:subPropertyOf odrl:function ;
 	skos:definition "The Party who undertakes the attribution." .

odrl:consentingParty
	a rdf:Property , owl:ObjectProperty, skos:Concept ;
 	rdfs:subPropertyOf odrl:function ;
 	skos:definition "The Party to obtain consent from." .

odrl:consentedParty a rdf:Property , owl:ObjectProperty, skos:Concept ;
 	rdfs:subPropertyOf odrl:function ;
 	skos:definition "The Party who obtains the consent." .

odrl:informedParty a rdf:Property , owl:ObjectProperty, skos:Concept ;
 	rdfs:subPropertyOf odrl:function ;
 	skos:definition "The Party to be informed of all uses." .

odrl:informingParty a rdf:Property , owl:ObjectProperty, skos:Concept ;
 	rdfs:subPropertyOf odrl:function ;
 	skos:definition "The Party who provides the inform use data." .

odrl:compensatedParty a rdf:Property , owl:ObjectProperty, skos:Concept ;
 	rdfs:subPropertyOf odrl:function ;
 	skos:definition "The Party is the recipient of the compensation." .

odrl:compensatingParty a rdf:Property , owl:ObjectProperty, skos:Concept ;
 	rdfs:subPropertyOf odrl:function ;
 	skos:definition "The Party that is the provider of the compensation." .

odrl:trackingParty a rdf:Property , owl:ObjectProperty, skos:Concept ;
	rdfs:subPropertyOf odrl:function ;
	skos:definition "The Party who is tracking usage." .

odrl:trackedParty a rdf:Property , owl:ObjectProperty, skos:Concept ;
	rdfs:subPropertyOf odrl:function ;
	skos:definition "The Party whose usage is being tracked." .

odrl:contractingParty a rdf:Property , owl:ObjectProperty, skos:Concept ;
	rdfs:subPropertyOf odrl:function ;
	skos:definition "The Party who is offering the contract." .

odrl:contractedParty a rdf:Property , owl:ObjectProperty, skos:Concept ;
	rdfs:subPropertyOf odrl:function ;
	skos:definition "The Party who is being contracted." .

#################################################################
#    Classes
#################################################################

tosl:Customer a rdfs:Class, owl:Class, skos:Concept ;
        rdfs:subClassOf odrl:Party .

tosl:BusinessCustomer a rdfs:Class, owl:Class, skos:Concept ;
        rdfs:subClassOf tosl:Customer .

tosl:Provider a rdfs:Class, owl:Class, skos:Concept ;
        rdfs:subClassOf odrl:Party .

tosl:Arbitration a rdfs:Class, owl:Class, skos:Concept ;
        rdfs:subClassOf tosl:DisputeResolution .

tosl:DisputeResolution a rdfs:Class, owl:Class, skos:Concept .

tosl:Jurisdiction a rdfs:Class, owl:Class, skos:Concept .

tosl:Law a rdfs:Class, owl:Class, skos:Concept .

tosl:Liability a rdfs:Class, owl:Class, skos:Concept .

tosl:Litigation a rdfs:Class, owl:Class, skos:Concept ;
        rdfs:subClassOf tosl:DisputeResolution .

tosl:Service a rdfs:Class, owl:Class, skos:Concept ;
        rdfs:subClassOf odrl:Asset .

tosl:UserContent a rdfs:Class, owl:Class, skos:Concept ;
        rdfs:subClassOf odrl:Asset .

odrl:Asset a rdfs:Class , owl:Class, skos:Concept;
    skos:note "The Asset entity can be any form of identifiable resource, such as data/information, content/media, applications, or services. Furthermore, it can be used to represent other Asset entities that are needed to undertake the Policy expression, such as with the Duty entity. To describe more details about the Asset, it is recommended to use Dublin Core [[dcterms]] elements or other content metadata." .

odrl:AssetCollection a rdfs:Class , owl:Class, skos:Concept ;
	rdfs:subClassOf odrl:Asset .

odrl:Party a rdfs:Class , owl:Class, skos:Concept ;
	rdfs:subClassOf [ a owl:Class ;
		owl:unionOf ( schema:Person schema:Organization foaf:Person foaf:Organization foaf:Agent vcard:Individual vcard:Organization vcard:Agent ) ;
	];
	skos:note "The Party entity could be a person, group of people, organisation, or agent. An agent is a person or thing that takes an active role or produces a specified effect. To describe more details about the Party, it is recommended to use W3C vCard Ontology [[vcard-rdf]] or FOAF Vocabulary [[foaf]]." .

odrl:PartyCollection a rdfs:Class , owl:Class, skos:Concept ;
	rdfs:subClassOf odrl:Party .

odrl:Policy a rdfs:Class , owl:Class, skos:Concept ;
	skos:note "A Policy may contain multiple Rules." .

odrl:Agreement a rdfs:Class, owl:Class, skos:Concept ;
 	rdfs:subClassOf odrl:Policy ;
 	skos:note "An Agreement Policy MUST contain at least one Permission or Prohibition rule, a Party with Assigner function, and a Party with Assignee function (in the same Permission or Prohibition). The Agreement Policy will grant the terms of the Policy from the Assigner to the Assignee." .

odrl:Rule a rdfs:Class , owl:Class, skos:Concept .

odrl:Permission a rdfs:Class , owl:Class, skos:Concept ;
	rdfs:subClassOf odrl:Rule ;
	owl:disjointWith odrl:Prohibition, odrl:Duty ;
	skos:definition "The ability to perform an Action over an Asset." .

odrl:Prohibition a rdfs:Class , owl:Class, skos:Concept ;
	rdfs:subClassOf odrl:Rule ;
	owl:disjointWith odrl:Duty, odrl:Permission ;
	skos:definition "The inability to perform an Action over an Asset." .

odrl:Duty a rdfs:Class , owl:Class, skos:Concept ;
	rdfs:subClassOf odrl:Rule ;
	owl:disjointWith odrl:Prohibition, odrl:Permission ;
    skos:definition "The obligation to perform an Action" .

odrl:Action a rdfs:Class, owl:Class, skos:Concept ;
	skos:note "Actions may be allowed by Permissions, disallowed by Prohibitions, or made mandatory by Duties." ;
	rdfs:subClassOf schema:Action .

odrl:Constraint a rdfs:Class, owl:Class, skos:Concept ;
	skos:definition "A boolean expression that refines the semantics of an Action and Party/Asset Collection or declare the conditions applicable to a Rule." .

odrl:LogicalConstraint	a rdfs:Class, owl:Class, skos:Concept ;
	skos:definition "A logical expression that refines the semantics of an Action and Party/Asset Collection or declare the conditions applicable to a Rule." .

odrl:Operator a rdfs:Class , owl:Class, skos:Concept ;
	skos:definition "Operator for constraint expression." .

odrl:LeftOperand a rdfs:Class , owl:Class, skos:Concept ;
	skos:note "Instances of the LeftOperand class are used as the leftOperand of a Constraint." .

odrl:RightOperand a rdfs:Class , owl:Class, skos:Concept ;
	skos:note "Instances of the RightOperand class are used as the rightOperand of a Constraint." .

#################################################################
#    Individuals
#################################################################

## Liability 

tosl:anyLiability a owl:NamedIndividual, skos:Concept, tosl:Liability .

tosl:physicalInjuries a owl:NamedIndividual, skos:Concept, tosl:Liability .

tosl:harmCausedByMalware a owl:NamedIndividual, skos:Concept, tosl:Liability .

tosl:discontinuity a owl:NamedIndividual, skos:Concept, tosl:Liability .

tosl:anyIndirectDamage a owl:NamedIndividual, skos:Concept, tosl:Liability .

tosl:directDamage a owl:NamedIndividual, skos:Concept, tosl:Liability .

tosl:anyLoss a owl:NamedIndividual, skos:Concept, tosl:Liability .

tosl:thirdparty a owl:NamedIndividual, skos:Concept, tosl:Liability .

tosl:serviceContent a owl:NamedIndividual, skos:Concept, tosl:Liability .

tosl:breachOfContract a owl:NamedIndividual, skos:Concept, tosl:Liability .

tosl:legalCompliance a owl:NamedIndividual, skos:Concept, tosl:Liability .

## Jurisdiction and Law

tosl:consumerPlaceCourts a owl:NamedIndividual, skos:Concept, tosl:Jurisdiction .

tosl:consumerPlaceLaw a owl:NamedIndividual, skos:Concept, tosl:Law .

tosl:californiaLaw a owl:NamedIndividual, skos:Concept, tosl:Law .

tosl:europeanLaw a owl:NamedIndividual, skos:Concept, tosl:Law .

## Operators

odrl:eq a odrl:Operator, owl:NamedIndividual, skos:Concept .

odrl:gt a odrl:Operator, owl:NamedIndividual, skos:Concept .

odrl:gteq a odrl:Operator, owl:NamedIndividual, skos:Concept .

odrl:hasPart a odrl:Operator, owl:NamedIndividual, skos:Concept .

odrl:isA a odrl:Operator, owl:NamedIndividual, skos:Concept   .

odrl:isAllOf a odrl:Operator, owl:NamedIndividual, skos:Concept .

odrl:isAnyOf a odrl:Operator, owl:NamedIndividual, skos:Concept .

odrl:isNoneOf a odrl:Operator, owl:NamedIndividual, skos:Concept .

odrl:isPartOf a odrl:Operator, owl:NamedIndividual, skos:Concept .

odrl:lt a odrl:Operator, owl:NamedIndividual, skos:Concept .

odrl:lteq a odrl:Operator, owl:NamedIndividual, skos:Concept .

odrl:neq a odrl:Operator, owl:NamedIndividual, skos:Concept .

odrl:andSequence a rdf:Property , owl:ObjectProperty, skos:Concept ;
    rdfs:subPropertyOf odrl:operand .

odrl:or a rdf:Property , owl:ObjectProperty, skos:Concept ;
    rdfs:subPropertyOf odrl:operand .

odrl:and a rdf:Property , owl:ObjectProperty, skos:Concept ;
    rdfs:subPropertyOf odrl:operand .

odrl:xone a rdf:Property , owl:ObjectProperty, skos:Concept ;
    rdfs:subPropertyOf odrl:operand .

## Left Operands

tosl:justification a owl:NamedIndividual, skos:Concept, odrl:LeftOperand .

tosl:totalAmount a owl:NamedIndividual, skos:Concept, odrl:LeftOperand .

tosl:inactivityPeriod a owl:NamedIndividual, skos:Concept, odrl:LeftOperand .

tosl:consumerResidentCountry a owl:NamedIndividual, skos:Concept, odrl:LeftOperand .

tosl:consentType a owl:NamedIndividual, skos:Concept, odrl:LeftOperand .

tosl:compliance a owl:NamedIndividual, skos:Concept, odrl:LeftOperand .

tosl:licensingType a owl:NamedIndividual, skos:Concept, odrl:LeftOperand .

tosl:effect a owl:NamedIndividual, skos:Concept, odrl:LeftOperand .

odrl:absolutePosition a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
	skos:definition "A point in space or time defined with absolute coordinates for the positioning of the target Asset." .

odrl:absoluteSpatialPosition a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
	skos:definition "The absolute spatial positions of four corners of a rectangle on a 2D-canvas or the eight corners of a cuboid in a 3D-space for the target Asset to fit." .

odrl:absoluteTemporalPosition a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
	skos:definition "The absolute temporal positions in a media stream the target Asset has to fit." .

odrl:absoluteSize a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
	skos:definition "Measure(s) of one or two axes for 2D-objects or measure(s) of one to tree axes for 3D-objects of the target Asset." .

odrl:count a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
	skos:definition "Numeric count of executions of the action of the Rule." .

odrl:dateTime a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
	skos:definition "The date (and optional time and timezone) of exercising the action of the Rule. Right operand value MUST be an xsd:date or xsd:dateTime as defined by [[xmlschema11-2]]." .

odrl:delayPeriod a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
	skos:note "Only the eq, gt, gteq operators SHOULD be used. <br />Example: <code>delayPeriod eq P60M</code> indicates a delay of 60 Minutes before exercising the action." .

odrl:deliveryChannel a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
	skos:definition "The delivery channel used for exercising the action of the Rule." .

odrl:elapsedTime a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
	skos:note "Only the eq, lt, lteq operators SHOULD be used. See also Metered Time. <br />Example: <code>elpasedTime eq P60M</code> indicates a total elapsed time of 60 Minutes." .

odrl:event a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
	skos:note "Events are temporal periods of time, and operators can be used to signal before (lt), during (eq) or after (gt) the event. <br />Example: May be taken during the “FIFA World Cup 2020” only." .

odrl:fileFormat a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
	skos:note "Example: An asset may be transformed into JPEG format." .

odrl:industry a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
	skos:note "Example: publishing or financial industry."  .

odrl:language a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
	skos:note "Example: the asset can only be translated into Greek. Must use [[bcp47]] codes for language values." .

odrl:media a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
	skos:note "Example media types: electronic, print, advertising, marketing. Note: The used type should not be an IANA MediaType as they are focused on technical characteristics. " .

odrl:meteredTime a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
	skos:note "Only the eq, lt, lteq operators SHOULD be used. See also Elapsed Time. <br />Example: <code>meteredTime lteq P60M</code> indicates an accumulated period of 60 Minutes or less."  .

odrl:payAmount a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
	skos:note "Can be used for compensation duties with the unit property indicating the currency of the payment." .

odrl:percentage a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
	skos:note "Example: Extract less than or equal to 50%." .

odrl:product a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
	skos:note "Example: May only be used in the XYZ Magazine." .

odrl:purpose a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
	skos:note "Example: Educational use." .

odrl:recipient a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
	skos:note "The Right Operand must identify one or more specific Parties or category/ies of the Party."  .

odrl:relativePosition a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
	skos:note "Example: The upper left corner of a picture may be constrained to a specific position of the canvas rendering it."  .

odrl:relativeSpatialPosition a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
	skos:definition "The relative spatial positions - expressed as percentages of full values - of four corners of a rectangle on a 2D-canvas or the eight corners of a cuboid in a 3D-space of the target Asset."  .

odrl:relativeTemporalPosition a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
	skos:note "See also Absolute Temporal Asset Position. <br />Example: The MP3 music file must be positioned between the positions at 33% and 48% of the temporal length of a stream. " .

odrl:relativeSize a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
	skos:note "Example: The image can be resized in width to a maximum of 200%. Note: See the Left Operand absoluteSize. " .

odrl:resolution a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
 	skos:note "Example: the image may be printed at 1200dpi." .

odrl:spatial a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
	skos:note "A code value for the area and source of the code must be presented in the Right Operand. <br />Example: the [[iso3166]] Country Codes or the Getty Thesaurus of Geographic Names. " .

odrl:spatialCoordinates a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
	skos:note "The default values are the altitude of earth's surface at this location and the WGS 84 datum." .

odrl:systemDevice a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
	skos:note "Example: The system device can be identified by a unique code created from the used hardware." .

odrl:timeInterval a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
	skos:note "Only the eq operator SHOULD be used. <br />Example: <code>timeInterval eq P7D</code> indicates a recurring 7 day period." .

odrl:unitOfCount a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
	skos:note "Note: Typically used with Duties to indicate the unit entity to be counted of the Action. <br />Example: A duty to compensate and a unitOfCount constraint of 'perUser' would indicate that the compensation by multiplied by the 'number of users'." .

odrl:version a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
	skos:note "Example: Single Paperback or Multiple Issues or version 2.0 or higher." .

odrl:virtualLocation a odrl:LeftOperand, owl:NamedIndividual, skos:Concept ;
	skos:definition "An identified location of the IT communication space which is relevant for exercising the action of the Rule." .

## RightOperand

tosl:implicitConsent a owl:NamedIndividual, skos:Concept, odrl:RightOperand .

tosl:writtenPermission a owl:NamedIndividual, skos:Concept, odrl:RightOperand .

tosl:explicitConsent a owl:NamedIndividual, skos:Concept, odrl:RightOperand .

tosl:degradation a owl:NamedIndividual, skos:Concept, odrl:RightOperand .

tosl:breachOfContract a owl:NamedIndividual, skos:Concept, odrl:RightOperand .

odrl:policyUsage a odrl:RightOperand, owl:NamedIndividual, skos:Concept ;
	skos:note "This can be used to express constraints with a LeftOperand relative to the time the rule is exercised. Operators indicate before (lt, lteq), during (eq) or after (gt, gteq) the usage of the rule. <br />Example: <code>event lt policyUsage</code> expresses that the identified event must have happened before the action of the rule is exercised." .

## Actions

tosl:procedure a skos:Concept, odrl:Action .

tosl:remove a owl:NamedIndividual, skos:Concept, odrl:Action .

tosl:consent a owl:NamedIndividual, skos:Concept, odrl:Action .

tosl:allowDownload a owl:NamedIndividual, skos:Concept, odrl:Action .

tosl:terminate a owl:NamedIndividual, skos:Concept, odrl:Action .

tosl:publish a owl:NamedIndividual, skos:Concept, odrl:Action .

tosl:integrate a owl:NamedIndividual, skos:Concept, odrl:Action .

tosl:develop a owl:NamedIndividual, skos:Concept, odrl:Action .

tosl:test a owl:NamedIndividual, skos:Concept, odrl:Action .

tosl:claim a owl:NamedIndividual, skos:Concept, odrl:Action .

tosl:appeal a owl:NamedIndividual, skos:Concept, odrl:Action .

tosl:assign a owl:NamedIndividual, skos:Concept, odrl:Action .

odrl:use a odrl:Action, skos:Concept ;
	skos:note "Use is the most generic action for all non-third-party usage. More specific types of the use action can be expressed by more targetted actions." .

odrl:grantUse a odrl:Action, skos:Concept ;
	skos:note "This action enables the assignee to create policies for the use of the Asset for third parties. The nextPolicy is recommended to be agreed with the third party. Use of temporal constraints is recommended." .

odrl:compensate a odrl:Action, skos:Concept ;
	skos:note "The compensation may use different types of things with a value: (i) the thing is expressed by the value (term) of the Constraint name; (b) the value is expressed by operator, rightOperand, dataType and unit. Typically the assignee will compensate the assigner, but other compensation party roles may be used." .

odrl:acceptTracking a odrl:Action, skos:Concept ;
	skos:note "The collected information may be tracked by the Assigner, or may link to a Party with the role 'trackingParty' function."  .

odrl:aggregate a odrl:Action, skos:Concept ;
	skos:definition "To use the Asset or parts of it as part of a composite collection." .

odrl:annotate a odrl:Action, skos:Concept ;
 	skos:definition "To add explanatory notations/commentaries to the Asset without modifying the Asset in any other way." .

odrl:anonymize a odrl:Action, skos:Concept ;
 	skos:definition "To anonymize all or parts of the Asset." .

odrl:archive a odrl:Action, skos:Concept ;
	skos:definition "To store the Asset (in a non-transient form)." .

odrl:attribute a odrl:Action, skos:Concept ;
	skos:definition "To attribute the use of the Asset." .

odrl:concurrentUse a odrl:Action, skos:Concept ;
 	skos:definition "To create multiple copies of the Asset that are being concurrently used." .

odrl:delete a odrl:Action, skos:Concept ;
 	skos:definition "To permanently remove all copies of the Asset after it has been used." .

odrl:derive a odrl:Action, skos:Concept ;
	skos:definition "To create a new derivative Asset from this Asset and to edit or modify the derivative." .

odrl:digitize a odrl:Action, skos:Concept ;
	skos:definition "To produce a digital copy of (or otherwise digitize) the Asset from its analogue form." .

odrl:display a odrl:Action, skos:Concept ;
	skos:definition "To create a static and transient rendition of an Asset." .

odrl:distribute a odrl:Action, skos:Concept ;
	skos:definition "To supply the Asset to third-parties."  .

odrl:ensureExclusivity a odrl:Action, skos:Concept ;
	skos:definition "To ensure that the Rule on the Asset is exclusive." .

odrl:execute a odrl:Action, skos:Concept ;
	skos:definition "To run the computer program Asset." .

odrl:extract a odrl:Action, skos:Concept ; 
	skos:definition "To extract parts of the Asset and to use it as a new Asset." .

odrl:give a odrl:Action, skos:Concept ;
	skos:definition "To transfer the ownership of the Asset to a third party without compensation and while deleting the original asset." .

odrl:include a odrl:Action, skos:Concept ;
	skos:definition "To include other related assets in the Asset." .

odrl:index a odrl:Action, skos:Concept ;
	skos:definition "To record the Asset in an index." .

odrl:inform a odrl:Action, skos:Concept ;
	skos:definition "To inform that an action has been performed on or in relation to the Asset." .

odrl:install a odrl:Action, skos:Concept ;
	skos:definition "To load the computer program Asset onto a storage device which allows operating or running the Asset." .

odrl:modify a odrl:Action, skos:Concept ;
	skos:definition "To change existing content of the Asset. A new asset is not created by this action." .

odrl:move a odrl:Action, skos:Concept ;
	skos:definition "To move the Asset from one digital location to another including deleting the original copy." .

odrl:nextPolicy a odrl:Action, skos:Concept ;
	skos:definition "To grant the specified Policy to a third party for their use of the Asset." .

odrl:obtainConsent a odrl:Action, skos:Concept ;
	skos:definition "To obtain verifiable consent to perform the requested action in relation to the Asset."  .

odrl:play a odrl:Action, skos:Concept ;
	skos:definition "To create a sequential and transient rendition of an Asset." .

odrl:present a odrl:Action, skos:Concept ;
 	skos:definition "To publicly perform the Asset." .

odrl:print a odrl:Action, skos:Concept ;
	skos:definition "To create a tangible and permanent rendition of an Asset." .

odrl:read a odrl:Action, skos:Concept ;
	skos:definition "To obtain data from the Asset." .

odrl:reproduce a odrl:Action, skos:Concept ;
	skos:definition "To make duplicate copies the Asset in any material form." .

odrl:reviewPolicy a odrl:Action, skos:Concept ;
	skos:definition "To review the Policy applicable to the Asset." .

odrl:sell a odrl:Action, skos:Concept ;
 	skos:definition "To transfer the ownership of the Asset to a third party with compensation and while deleting the original asset." .

odrl:stream a odrl:Action, skos:Concept ;
 	skos:definition "To deliver the Asset in real-time." .

odrl:synchronize a odrl:Action, skos:Concept ;
  	skos:definition "To use the Asset in timed relations with media (audio/visual) elements of another Asset."  .

odrl:textToSpeech a odrl:Action, skos:Concept ;
	skos:definition "To have a text Asset read out loud."  .

odrl:transfer a odrl:Action, skos:Concept ;
	skos:definition "To transfer the ownership of the Asset in perpetuity." .

odrl:transform a odrl:Action, skos:Concept ;
	skos:definition "To convert the Asset into a different format." .

odrl:translate a odrl:Action, skos:Concept ;
  	skos:definition "To translate the original natural language of an Asset into another natural language." .

odrl:uninstall a odrl:Action, skos:Concept ;
 	skos:definition "To unload and delete the computer program Asset from a storage device and disable its readiness for operation." .

odrl:watermark a odrl:Action, skos:Concept ;
	skos:definition "To apply a watermark to the Asset." .

        Reference template: 
        # TOSL agreement template

Please use the following prefixes by default:

```
@prefix : <http://example.com/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix odrl: <http://www.w3.org/ns/odrl/2/> .
@prefix tosl: <https://w3id.org/tosl/> .
@base <http://example.com> .
```

For each ODRL and TOSL namespace property, it is mandatory to ensure accurate and consistent usage by thoroughly studying their ontologies.

### Guidelines for Using the ODRL Agreement Class:
Agreement - a subclass of Policy that supports granting of Rules from assigner to assignee Parties.

- An Agreement **MUST** have at least one permission, prohibition, or obligation property values of type the `Permission`, `Prohibition`, and `Obligation`.
- An Agreement **MAY** have none, one or many methods of dispute resolution.
- An Agreement **MAY** have none, one or many limitations of liability or liabilities.
- An Agreement **MAY** have none, one, or many `profile` property values of type `IRI` to denote the ODRL Profile(s) that this Policy adheres to.
- An Agreement **MUST** specify one assigner, a `Provider` type (`:OpenAI a tosl:Provider`). This is the entity granting permissions or constraints, often the owner of the asset.

Example Case: For each ODRL Agreement you create in your TTL file, it is mandatory to include metadata using Dublin Core terms. Use the following template as a guide and ensure that your ODRL Policy includes the necessary metadata in accordance with the agreement.

```ttl
@prefix : <http://example.com/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix vcard: <http://www.w3.org/2006/vcard/ns#> .
@prefix odrl: <http://www.w3.org/ns/odrl/2/> .
@prefix tosl: <https://w3id.org/tosl/> .
@base <http://example.com> .

:agreement01 a odrl:Agreement, odrl:Asset ;
    odrl:profile <https://w3id.org/tosl/> ;
    dcterms:source <https://openai.com/policies/eu-terms-of-use/> ;
    dcterms:title "The OpenAI Europe Terms of Use 2024"^^xsd:string ;
    dcterms:description "These Terms of Use govern the use of OpenAI's services, including ChatGPT and DALL·E."^^xsd:string;
    dcterms:creator "OpenAI"^^xsd:string ;
    dcterms:rightsHolder :OpenAI ;
    dcterms:issued "2024-12-11"^^xsd:date ;
    dcterms:requires 
        <https://openai.com/policies/usage-policies/>,
        <https://openai.com/policies/service-terms/>,
        <https://openai.com/policies/sharing-publication-policy/>,
        <https://openai.com/policies/service-credit-terms/>,
        <https://openai.com/brand/> ;
    odrl:permission :permission01, :permission02, :permission03, :permission04, :permission05 ;
    odrl:obligation :obligation01, :obligation02 ;
    odrl:prohibition :prohibition01, :prohibition02, :prohibition03 ;
    tosl:limitationOfLiability :liability04 ;
    tosl:onDispute :litigation01, :litigation02, :litigation03 ;
    tosl:liability :liability05 ;
    odrl:assigner :OpenAI .
```

### Guidelines for Using the ODRL Permission Class:
Permission - a Permission allows an action, with all refinements satisfied, to be exercised on an Asset if
all constraints are satisfied and if all duties are fulfilled.

- A **Permission MUST** have one `description` representing the agreement disposition.
- A **Permission MUST** have one `assignee` property value that is the recipient of the Rule.
- A **Permission MUST** have an `action` property value of type `Action`. It is mandatory that this action is an instance of **TOSL** or **ODRL**.
- A **Permission MUST** have one `target` property value of type `Asset`. Use the "Guidelines for Using the ODRL 'Asset' Class" for creating the `Asset` type for the `target` property.
- A **Permission MAY** have none, one or many `constraint` property values of type `Constraint` / `LogicalConstraint`.
- A **Permission MAY** have none, one or many limitations of liability or liabilities.
- A **Permission MAY** have none, one, or more `odrl:duty` property values of type `Duty`. The `duty` property asserts a **pre-condition**.
- A **Permission MAY** have none, one, or more `tosl:trigger` property values of type `Duty`. The `duty` property asserts a **post-condition**.

Use the following template as a guide and ensure that your permission is consistent with these
guidelines.

```ttl
@prefix : <http://example.com/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix odrl: <http://www.w3.org/ns/odrl/2/> .
@prefix tosl: <https://w3id.org/tosl/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:paidFeatures a tosl:Service ;
    dcterms:description "Premium features available only to paying subscribers." .

:OpenAI a tosl:Provider ;
    dcterms:description "OpenAI is an AI research and deployment company committed to ensuring that artificial general intelligence (AGI) benefits all of humanity."^^xsd:string ;
    foaf:name "Open AI" ;
    foaf:homepage <https://openai.com/> ;
    odrl:assignerOf :services .

:permission14 a odrl:Permission ;
    dcterms:description "We may change our prices from time to time. If we increase our subscription prices, we will give you at least 30 days’ notice and any price increase will take effect on your next renewal so that you can cancel if you do not agree to the price increase." ;
    odrl:action odrl:modify ;
    odrl:target :paidFeatures ;
    odrl:assignee :OpenAI ;
    odrl:constraint [
        a odrl:Constraint ;
        dcterms:description "At least 30 days’ notice must be provided before a price increase takes effect." ;
        odrl:leftOperand odrl:delayPeriod ;
        odrl:operator odrl:gteq ;
        odrl:rightOperand "P30D"^^xsd:duration
    ] ;
    odrl:duty [
        a odrl:Duty ;
        odrl:action odrl:inform ;
        odrl:target :paidFeatures ;
        odrl:assignee :OpenAI ;
        odrl:informedParty :customer
    ] .
```

### Guidelines for Using the ODRL Prohibition Class:
Prohibition - A Prohibition disallows an action, with all refinements satisfied, to be exercised on an
Asset if all constraints are satisfied. If the Prohibition has been infringed by the action being exercised,
then all the remedies MUST be fulfilled to set the state of the Prohibition to not infringed.

- A **Prohibition MUST** have one `description` representing the agreement disposition.
- A **Prohibition MUST** have one `assignee` property value that is the recipient of the Rule.
- A **Prohibition MUST** have an `action` property value of type `Action`. It is mandatory that this action is an instance of **TOSL** or **ODRL**.
- A **Prohibition MUST** have one `target` property value of type `Asset`. Use the *Guidelines for Using the ODRL 'Asset' Class* for creating the `Asset` type for the `target` property.
- A **Prohibition MAY** have none, one or many `constraint` property values of type `Constraint` / `LogicalConstraint`.
- A **Prohibition MAY** have none, one or many limitations of liability or liabilities.
- A **Prohibition MAY** have none, one, or more `odrl:remedy` property values of type `Duty`. The `remedy` property asserts an agreed obligation that **MUST** be fulfilled in the case that the Prohibition has been infringed.

Use the following template as a guide and ensure that your prohibition is consistent with these
guidelines.

```ttl
@prefix : <http://example.com/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix odrl: <http://www.w3.org/ns/odrl/2/> .
@prefix tosl: <https://w3id.org/tosl/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:prohibition03 a odrl:Prohibition ;
    dcterms:description "You must comply with all applicable trade laws, including sanctions and export control laws. Our Services may not be used in or for the benefit of, or exported or re-exported to: (a) any U.S. embargoed country or territory, or (b) any individual or entity with whom dealings are prohibited or restricted under applicable trade laws."^^xsd:string ;
    odrl:action odrl:use ;
    odrl:target :services ;
    odrl:assignee :customer ;
    odrl:constraint [
        a odrl:LogicalConstraint ;
        odrl:or (
            [
                a odrl:Constraint ;
                odrl:leftOperand odrl:spatial ;
                odrl:operator odrl:isAnyOf ;
                odrl:rightOperand ( "CU" "IR" "KP" "SY" "RU" )
            ]
            [
                a odrl:Constraint ;
                odrl:leftOperand tosl:compliance ;
                odrl:operator odrl:neq ;
                odrl:rightOperand :tradeLaw
            ]
        )
    ] .
```

### Guidelines for Using the ODRL Duty Class:
Duty - A Duty is an obligation to perform an action. It is fulfilled when all its constraints are met, and the action is executed. If the action is not executed, any defined consequences must also be fulfilled.

- A Duty **MUST** have one description representing the agreement disposition.
- A Duty **MUST** have one assignee property value that is the recipient of the Rule.
- A Duty **MUST** have an action property value of type *Action*. It is mandatory that this action is an instance of **TOSL** or **ODRL**.
- A Duty **MUST** have one target property value of type *Asset*. Use *Guidelines for Using the ODRL 'Asset' Class* for creating Asset Type for the target property.
- A Duty **MAY** have none, one or many constraint property values of type *Constraint/LogicalConstraint*.
- A Duty **MAY** have none, one or many limitations of liability or liabilities.
- A Duty **MAY** have none, one, or more `odrl:consequence` property values of type *Duty*. The `duty` property is used to express the repercussions of not fulfilling an agreed Policy obligation or duty for a Permission.

Use the following template as a guide and ensure that your duty is consistent with these
guidelines.

```ttl
:obligation01 a odrl:Duty ;
    dcterms:description "You form a contract with us when you confirm that you accept these Terms or when you otherwise use the Services." ;
    odrl:action tosl:consent ;
    odrl:constraint [
        a odrl:Constraint ;
        odrl:leftOperand tosl:consentType ;
        odrl:operator odrl:eq ;
        odrl:rightOperand tosl:implicitConsent
    ] ;
    odrl:target :agreement01 ;
    odrl:assignee :customer .
```

### Guidelines for Using the ODRL Action Class:
Action - An Action class indicates an operation that can be exercised on an Asset. An Action is associated with the Asset via the action property in a Rule.

The available instances of actions are predefined and must be used as provided. These actions come from both the **ODRL** and **TOSL** vocabularies:

**ODRL actions:**  
`odrl:acceptTracking`, `odrl:aggregate`, `odrl:anonymize`, `odrl:annotate`, `odrl:archive`, `odrl:attribute`, `odrl:compensate`, `odrl:concurrentUse`, `odrl:delete`, `odrl:derive`, `odrl:digitize`, `odrl:display`, `odrl:distribute`, `odrl:ensureExclusivity`, `odrl:execute`, `odrl:extract`, `odrl:give`, `odrl:grantUse`, `odrl:include`, `odrl:index`, `odrl:inform`, `odrl:install`, `odrl:modify`, `odrl:move`, `odrl:nextPolicy`, `odrl:obtainConsent`, `odrl:play`, `odrl:present`, `odrl:print`, `odrl:read`, `odrl:reproduce`, `odrl:reviewPolicy`, `odrl:sell`, `odrl:stream`, `odrl:synchronize`, `odrl:textToSpeech`, `odrl:transfer`, `odrl:transform`, `odrl:translate`, `odrl:uninstall`, `odrl:use`, `odrl:watermark`

**TOSL actions:**  
`tosl:allowDownload`, `tosl:appeal`, `tosl:assign`, `tosl:claim`, `tosl:consent`, `tosl:develop`, `tosl:evaluate`, `tosl:integrate`, `tosl:procedure`, `tosl:publish`, `tosl:remove`, `tosl:terminate`, `tosl:test`

### Guidelines for Using the ODRL Party Class:
Party - A Party is an entity (such as a person, organization, or agent) that must adopt a functional role in a Rule, such as tosl:Provider, tosl:Customer, or tosl:BusinessCustomer.

### Guidelines for Using the ODRL Asset Class:
Asset - An Asset is a resource or group of resources that are the subject of a Rule, such as data, media, services, or physical items. It is referenced by Permissions, Prohibitions and/or Duties, and must be of type odrl:Asset, tosl:Service, or tosl:UserContent.

### Guidelines for Using the ODRL Constraint Class:
Constraints - Constraints can be represented as a Constraint class or Logical Constraint class. A Logical Constraint will refer to existing Constraints as its operands. When multiple Constraints apply to the
same Rule, Action, Party/Asset Collection, then they are interpreted as conjunction, and all MUST be satisfied.

A **Logical Constraint** defines a logical relationship between multiple `Constraint` instances.  
It **MUST** include one operand sub-property (`odrl:or`, `odrl:xone`, `odrl:and`, or `odrl:andSequence`) indicating how the constraints are evaluated.

- A `Constraint` **MUST** have one `leftOperand` property whose value is of type `LeftOperand`.  
  This value should be selected from a predefined set of terms, including:  
  `odrl:absolutePosition`, `odrl:absoluteSpatialPosition`, `odrl:absoluteTemporalPosition`, `odrl:absoluteSize`, `odrl:count`, `odrl:dateTime`, `odrl:delayPeriod`, `odrl:deliveryChannel`, `odrl:elapsedTime`, `odrl:event`, `odrl:fileFormat`, `odrl:industry`, `odrl:language`, `odrl:media`, `odrl:meteredTime`, `odrl:payAmount`, `odrl:percentage`, `odrl:product`, `odrl:purpose`, `odrl:recipient`, `odrl:relativePosition`, `odrl:relativeSpatialPosition`, `odrl:relativeTemporalPosition`, `odrl:relativeSize`, `odrl:resolution`, `odrl:spatial`, `odrl:spatialCoordinates`, `odrl:systemDevice`, `odrl:timeInterval`, `odrl:unitOfCount`, `odrl:version`, `odrl:virtualLocation`, `tosl:justification`, `tosl:totalAmount`, `tosl:inactivityPeriod`, `tosl:consumerResidentCountry`, `tosl:consentType`, `tosl:compliance`, `tosl:licensingType`, `tosl:effect`, and `foaf:age`.  
  Alternatively, the value may be a custom IRI, as long as it is explicitly declared as an instance of `odrl:LeftOperand`.

- A `Constraint` **MUST** have one `operator` property whose value is of type `Operator`.  
  The allowed operator values are:  
  `odrl:eq`, `odrl:gt`, `odrl:gteq`, `odrl:lt`, `odrl:lteq`, `odrl:neq`, `odrl:isA`, `odrl:hasPart`, `odrl:isPartOf`, `odrl:isAllOf`, `odrl:isAnyOf`, and `odrl:isNoneOf`.

- A `Constraint` **MUST** have one `rightOperand` property, which provides the value to be evaluated against the condition defined by the `leftOperand` and `operator`.

- A `Constraint` **MAY** have none or one `unit` property value (of type IRI [rfc3987]) to set the unit used for the value of the `rightOperand`/Reference.


### Guidelines for Using the TOSL Dispute Resolution Class:

Dispute Resolution – Used to specify the mechanisms for resolving disputes among the parties involved in the agreement, such as arbitration or litigation. It is necessary to establish the location where disputes will be resolved and the specific legal framework that will apply.

- A Dispute Resolution **MAY** include `Litigation` or `Arbitration`.
- If `Litigation` is used, it **MAY** require `Arbitration` to be attempted first.
- A Dispute Resolution **MUST** include one `description` property of type `xsd:string`, providing a natural-language explanation of the term.
- A Dispute Resolution **MUST** have one `targetParty` property of type `Party`, identifying the party responsible for or affected by the process. This value should be either a `Customer` or a `BusinessCustomer`.
- A Dispute Resolution **MUST** have one `takePlaceIn` property of type `Jurisdiction`, specifying the court or legal venue where the resolution will occur.
- A Dispute Resolution **MUST** have one `governedBy` property of type `Law`, indicating the applicable legal framework.
- A Dispute Resolution **MUST** have none, one, or more `Constraint` instances representing specific conditions under which litigation may occur.

Example:
```ttl
:customer a tosl:Customer ;
    dcterms:description "This party represents the consumer in the context of the OpenAI services Terms of Use" .

:litigation02 a tosl:Litigation ;
    dcterms:description "If you reside in the EEA, you can also raise the dispute with an alternative dispute resolution body via the European Commission’s Online Dispute Resolution (ODR) Platform" ;
    tosl:targetParty :customer ;
    tosl:takesPlaceIn tosl:consumerPlaceCourts ;
    tosl:governedBy tosl:consumerPlaceLaw ;
    tosl:condition [
        a odrl:LogicalConstraint ;
        odrl:and (
            [
                a odrl:Constraint ;
                odrl:leftOperand tosl:consumerResidentCountry ;
                odrl:operator odrl:isAnyOf ;
                odrl:rightOperand (
                    "AT" "BE" "BG" "HR" "CY" "CZ" "DK" "EE" "FI" "FR" "DE" "GR" "HU" "IS" "IE" "IT" "LV" "LI" "LT" "LU" "MT" "NL" "NO" "PL" "PT" "RO" "SK" "SI" "ES" "SE" "CH"
                )
            ]
            [
                a odrl:Constraint ;
                odrl:leftOperand odrl:deliveryChannel ;
                odrl:operator odrl:eq ;
                odrl:rightOperand <https://ec.europa.eu/consumers/odr>
            ]
        )
    ] .

tosl:consumerPlaceCourts a tosl:Jurisdiction .
tosl:consumerPlaceLaw a tosl:Law .
```

### Guidelines for Using the TOSL Liability Class:
Liability - A Liability mechanism is used to define the extent to which a party is responsible for damages, losses, or obligations within an agreement. It can be used to establish either full liability or a limitation of liability under certain conditions.

- A `Liability` **MUST** include one `description` property of type `xsd:string`, providing a natural-language explanation of the liability terms.

- A `Liability` **MUST** have one `liableParty` property of type `Party`, identifying the party who bears the responsibility.  
  Valid values include: `tosl:Provider`, `tosl:Customer`, or `tosl:BusinessCustomer`.

- A `Liability` **MUST** have one `targetParty` property of type `Party`, identifying the party who is affected by or protected under the liability clause.  
  Accepted values are the same as for `liableParty`.

- A `Liability` **MUST** include one `rdf:value` property, specifying the type or scope of liability.  
  This value must be selected from a controlled set of terms defined in the TOSL vocabulary, such as:  
  `tosl:anyLiability`, `tosl:physicalInjuries`, `tosl:harmCausedByMalware`, `tosl:discontinuity`, `tosl:anyIndirectDamage`,  
  `tosl:directDamage`, `tosl:anyLoss`, `tosl:thirdparty`, `tosl:serviceContent`, `tosl:breachOfContract`, or `tosl:legalCompliance`.

- A `Liability` **MAY** include a `limitation` property. If present, the value **MUST** conform to either a `Constraint` or a `LogicalConstraint` structure.  
  This allows the liability to be conditional, depending on context or pre-defined rules.

Example:
```ttl
:liability06 a tosl:Liability ;
    dcterms:description """Neither OpenAI nor any of its affiliates or licensors will be liable for any indirect, incidental, special, consequential, or exemplary damages. The total liability is limited to the greater of: (1) the amount paid by the user in the prior 12 months for the specific service, or (2) $100. These limitations apply only to the maximum extent permitted by applicable law.""" ;
    tosl:liableParty :OpenAI ;
    tosl:targetParty :businessCustomer ;
    rdf:value tosl:anyIndirectDamage, tosl:anyLoss, tosl:legalCompliance ;
    tosl:limitation [
        a odrl:LogicalConstraint ;
        odrl:or (
            [
                a odrl:Constraint ;
                odrl:leftOperand tosl:totalAmount ;
                odrl:operator odrl:lte ;
                odrl:rightOperand :consumerQuote12Months
            ]
            [
                a odrl:Constraint ;
                odrl:leftOperand odrl:payAmount ;
                odrl:operator odrl:eq ;
                odrl:rightOperand "100.00"^^xsd:decimal ;
                odrl:unit <http://dbpedia.org/resource/United_States_dollar>
            ]
        )
    ] .

```


        Metadata:
          - Provider: ELSEVIER
          - Source: https://dev.elsevier.com/api_service_agreement.html
          - Title: API SERVICE AGREEMENT
          - Date: 2017

        Clause to model: The term of this Agreement shall commence on the date on which the Developer has accepted this Agreement and shall continue until either party terminates the Agreement in writing or the API Key is deactivated by Elsevier.

        Classification type: permission

        Party: both

        Suggested Action: tosl:terminate

        Target asset: agreement